[
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [
      {
        "desc" : "An integer specifying how long the alerts generated by BrewInfo will stay onscreen",
        "stripped_doc" : [
          "An integer specifying how long the alerts generated by BrewInfo will stay onscreen"
        ],
        "name" : "brew_info_delay_sec",
        "doc" : "An integer specifying how long the alerts generated by BrewInfo will stay onscreen",
        "notes" : [

        ],
        "signature" : "BrewInfo.brew_info_delay_sec",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "BrewInfo.brew_info_delay_sec",
        "parameters" : [

        ]
      },
      {
        "desc" : "A table in conformance with the [hs.alert.defaultStyle](http:\/\/www.hammerspoon.org\/docs\/hs.alert.html#defaultStyle[]) format that specifies the style used by the alerts. Default value: `{ textFont = \"Courier New\", textSize = 14, radius = 10 }`",
        "stripped_doc" : [
          "A table in conformance with the [hs.alert.defaultStyle](http:\/\/www.hammerspoon.org\/docs\/hs.alert.html#defaultStyle[]) format that specifies the style used by the alerts. Default value: `{ textFont = \"Courier New\", textSize = 14, radius = 10 }`"
        ],
        "name" : "brew_info_style",
        "doc" : "A table in conformance with the [hs.alert.defaultStyle](http:\/\/www.hammerspoon.org\/docs\/hs.alert.html#defaultStyle[]) format that specifies the style used by the alerts. Default value: `{ textFont = \"Courier New\", textSize = 14, radius = 10 }`",
        "notes" : [

        ],
        "signature" : "BrewInfo.brew_info_style",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "BrewInfo.brew_info_style",
        "parameters" : [

        ]
      },
      {
        "desc" : "If `true`, and no text is currently selected in the terminal, issue a double-click to select the text below the cursor, and use that as the input to `brew info`. See also `BrewInfo.select_text_modifiers`. Defaults to `true`.",
        "stripped_doc" : [
          "If `true`, and no text is currently selected in the terminal, issue a double-click to select the text below the cursor, and use that as the input to `brew info`. See also `BrewInfo.select_text_modifiers`. Defaults to `true`."
        ],
        "name" : "select_text_if_needed",
        "doc" : "If `true`, and no text is currently selected in the terminal, issue a double-click to select the text below the cursor, and use that as the input to `brew info`. See also `BrewInfo.select_text_modifiers`. Defaults to `true`.",
        "notes" : [

        ],
        "signature" : "BrewInfo.select_text_if_needed",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "BrewInfo.select_text_if_needed",
        "parameters" : [

        ]
      },
      {
        "desc" : "Table containing the modifiers to be used together with a double-click when `BrewInfo.select_text_if_needed` is true. Defaults to `{cmd = true, shift = true}` to issue a Cmd-Shift-double-click, which will select a continuous non-space string in Terminal and iTerm2.",
        "stripped_doc" : [
          "Table containing the modifiers to be used together with a double-click when `BrewInfo.select_text_if_needed` is true. Defaults to `{cmd = true, shift = true}` to issue a Cmd-Shift-double-click, which will select a continuous non-space string in Terminal and iTerm2."
        ],
        "name" : "select_text_modifiers",
        "doc" : "Table containing the modifiers to be used together with a double-click when `BrewInfo.select_text_if_needed` is true. Defaults to `{cmd = true, shift = true}` to issue a Cmd-Shift-double-click, which will select a continuous non-space string in Terminal and iTerm2.",
        "notes" : [

        ],
        "signature" : "BrewInfo.select_text_modifiers",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "BrewInfo.select_text_modifiers",
        "parameters" : [

        ]
      }
    ],
    "stripped_doc" : [

    ],
    "type" : "Module",
    "Deprecated" : [

    ],
    "desc" : "Display pop-up with Homebrew Formula info, or open their URL",
    "Constructor" : [

    ],
    "doc" : "Display pop-up with Homebrew Formula info, or open their URL\n\nDownload: [https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/BrewInfo.spoon.zip](https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/BrewInfo.spoon.zip)\n\nYou can bind keys to automatically display the output of `brew\ninfo` of the currently-selected package name, or to open its\nhomepage. I use it to quickly explore new packages from the output\nof `brew update`.",
    "items" : [
      {
        "desc" : "An integer specifying how long the alerts generated by BrewInfo will stay onscreen",
        "stripped_doc" : [
          "An integer specifying how long the alerts generated by BrewInfo will stay onscreen"
        ],
        "name" : "brew_info_delay_sec",
        "doc" : "An integer specifying how long the alerts generated by BrewInfo will stay onscreen",
        "notes" : [

        ],
        "signature" : "BrewInfo.brew_info_delay_sec",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "BrewInfo.brew_info_delay_sec",
        "parameters" : [

        ]
      },
      {
        "desc" : "A table in conformance with the [hs.alert.defaultStyle](http:\/\/www.hammerspoon.org\/docs\/hs.alert.html#defaultStyle[]) format that specifies the style used by the alerts. Default value: `{ textFont = \"Courier New\", textSize = 14, radius = 10 }`",
        "stripped_doc" : [
          "A table in conformance with the [hs.alert.defaultStyle](http:\/\/www.hammerspoon.org\/docs\/hs.alert.html#defaultStyle[]) format that specifies the style used by the alerts. Default value: `{ textFont = \"Courier New\", textSize = 14, radius = 10 }`"
        ],
        "name" : "brew_info_style",
        "doc" : "A table in conformance with the [hs.alert.defaultStyle](http:\/\/www.hammerspoon.org\/docs\/hs.alert.html#defaultStyle[]) format that specifies the style used by the alerts. Default value: `{ textFont = \"Courier New\", textSize = 14, radius = 10 }`",
        "notes" : [

        ],
        "signature" : "BrewInfo.brew_info_style",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "BrewInfo.brew_info_style",
        "parameters" : [

        ]
      },
      {
        "desc" : "If `true`, and no text is currently selected in the terminal, issue a double-click to select the text below the cursor, and use that as the input to `brew info`. See also `BrewInfo.select_text_modifiers`. Defaults to `true`.",
        "stripped_doc" : [
          "If `true`, and no text is currently selected in the terminal, issue a double-click to select the text below the cursor, and use that as the input to `brew info`. See also `BrewInfo.select_text_modifiers`. Defaults to `true`."
        ],
        "name" : "select_text_if_needed",
        "doc" : "If `true`, and no text is currently selected in the terminal, issue a double-click to select the text below the cursor, and use that as the input to `brew info`. See also `BrewInfo.select_text_modifiers`. Defaults to `true`.",
        "notes" : [

        ],
        "signature" : "BrewInfo.select_text_if_needed",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "BrewInfo.select_text_if_needed",
        "parameters" : [

        ]
      },
      {
        "desc" : "Table containing the modifiers to be used together with a double-click when `BrewInfo.select_text_if_needed` is true. Defaults to `{cmd = true, shift = true}` to issue a Cmd-Shift-double-click, which will select a continuous non-space string in Terminal and iTerm2.",
        "stripped_doc" : [
          "Table containing the modifiers to be used together with a double-click when `BrewInfo.select_text_if_needed` is true. Defaults to `{cmd = true, shift = true}` to issue a Cmd-Shift-double-click, which will select a continuous non-space string in Terminal and iTerm2."
        ],
        "name" : "select_text_modifiers",
        "doc" : "Table containing the modifiers to be used together with a double-click when `BrewInfo.select_text_if_needed` is true. Defaults to `{cmd = true, shift = true}` to issue a Cmd-Shift-double-click, which will select a continuous non-space string in Terminal and iTerm2.",
        "notes" : [

        ],
        "signature" : "BrewInfo.select_text_modifiers",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "BrewInfo.select_text_modifiers",
        "parameters" : [

        ]
      },
      {
        "desc" : "Binds hotkeys for BrewInfo",
        "stripped_doc" : [
          "Binds hotkeys for BrewInfo",
          ""
        ],
        "name" : "bindHotkeys",
        "doc" : "Binds hotkeys for BrewInfo\n\nParameters:\n * mapping - A table containing hotkey modifier\/key details for the following items:\n  * show_brew_info - Show output of `brew info` using the selected text as package name\n  * open_brew_url - Open the homepage of the formula whose name is currently selected\n  * show_brew_cask_info - Show output of `brew cask info` using the selected text as package name\n  * open_brew_cask_url - Open the homepage of the Cask whose name is currently selected",
        "notes" : [

        ],
        "signature" : "BrewInfo:bindHotkeys(mapping)",
        "type" : "Method",
        "returns" : [

        ],
        "def" : "BrewInfo:bindHotkeys(mapping)",
        "parameters" : [
          " * mapping - A table containing hotkey modifier\/key details for the following items:",
          "  * show_brew_info - Show output of `brew info` using the selected text as package name",
          "  * open_brew_url - Open the homepage of the formula whose name is currently selected",
          "  * show_brew_cask_info - Show output of `brew cask info` using the selected text as package name",
          "  * open_brew_cask_url - Open the homepage of the Cask whose name is currently selected"
        ]
      },
      {
        "desc" : "Opens the homepage for package `pkg`, as obtained from the `homepage` field in `brew <subcommand> cat <pkg>`",
        "stripped_doc" : [
          "Opens the homepage for package `pkg`, as obtained from the `homepage` field in `brew <subcommand> cat <pkg>`",
          ""
        ],
        "name" : "openBrewURL",
        "doc" : "Opens the homepage for package `pkg`, as obtained from the `homepage` field in `brew <subcommand> cat <pkg>`\n\nParameters:\n * pkg - name of the package to query\n * subcommand - brew subcommand to use for the `cat` command. Defaults to an empty string, which results in \"brew cat <pkg>\" being run. For example, if `subcommand` is \"cask\", the `brew cask cat <pkg>` command will be used.\n\nReturns:\n * The Spoon object",
        "notes" : [

        ],
        "signature" : "BrewInfo:openBrewURL(pkg, subcommand)",
        "type" : "Method",
        "returns" : [
          " * The Spoon object"
        ],
        "def" : "BrewInfo:openBrewURL(pkg, subcommand)",
        "parameters" : [
          " * pkg - name of the package to query",
          " * subcommand - brew subcommand to use for the `cat` command. Defaults to an empty string, which results in \"brew cat <pkg>\" being run. For example, if `subcommand` is \"cask\", the `brew cask cat <pkg>` command will be used.",
          ""
        ]
      },
      {
        "desc" : "Opens the homepage for the currently-selected package, as obtained from the `homepage` field in `brew <subcommand> cat <pkg>`",
        "stripped_doc" : [
          "Opens the homepage for the currently-selected package, as obtained from the `homepage` field in `brew <subcommand> cat <pkg>`",
          ""
        ],
        "name" : "openBrewURLCurSel",
        "doc" : "Opens the homepage for the currently-selected package, as obtained from the `homepage` field in `brew <subcommand> cat <pkg>`\n\nParameters:\n * subcommand - brew subcommand to use for the `cat` command. Defaults to an empty string, which results in \"brew cat <pkg>\" being run. For example, if `subcommand` is \"cask\", the `brew cask cat <pkg>` command will be used.\n\nReturns:\n * The Spoon object",
        "notes" : [

        ],
        "signature" : "BrewInfo:openBrewURLCurSel(subcommand)",
        "type" : "Method",
        "returns" : [
          " * The Spoon object"
        ],
        "def" : "BrewInfo:openBrewURLCurSel(subcommand)",
        "parameters" : [
          " * subcommand - brew subcommand to use for the `cat` command. Defaults to an empty string, which results in \"brew cat <pkg>\" being run. For example, if `subcommand` is \"cask\", the `brew cask cat <pkg>` command will be used.",
          ""
        ]
      },
      {
        "desc" : "Displays an alert with the output of `brew <subcommand> info <pkg>`",
        "stripped_doc" : [
          "Displays an alert with the output of `brew <subcommand> info <pkg>`",
          ""
        ],
        "name" : "showBrewInfo",
        "doc" : "Displays an alert with the output of `brew <subcommand> info <pkg>`\n\nParameters:\n * pkg - name of the package to query\n * subcommand - brew subcommand to use for the `info` command. Defaults to an empty string, which results in \"brew info <pkg>\" being run. For example, if `subcommand` is \"cask\", the `brew cask info <pkg>` command will be used.\n\nReturns:\n * The Spoon object",
        "notes" : [

        ],
        "signature" : "BrewInfo:showBrewInfo(pkg, subcommand)",
        "type" : "Method",
        "returns" : [
          " * The Spoon object"
        ],
        "def" : "BrewInfo:showBrewInfo(pkg, subcommand)",
        "parameters" : [
          " * pkg - name of the package to query",
          " * subcommand - brew subcommand to use for the `info` command. Defaults to an empty string, which results in \"brew info <pkg>\" being run. For example, if `subcommand` is \"cask\", the `brew cask info <pkg>` command will be used.",
          ""
        ]
      },
      {
        "desc" : "Display `brew <subcommand> info` using the selected text as the package name",
        "stripped_doc" : [
          "Display `brew <subcommand> info` using the selected text as the package name",
          ""
        ],
        "name" : "showBrewInfoCurSel",
        "doc" : "Display `brew <subcommand> info` using the selected text as the package name\n\nParameters:\n * subcommand - brew subcommand to use for the `info` command. Defaults to an empty string, which results in \"brew info\" being run. For example, if `subcommand` is \"cask\", the `brew cask info` command will be used.\n\nReturns:\n * The Spoon object",
        "notes" : [

        ],
        "signature" : "BrewInfo:showBrewInfoCurSel(subcommand)",
        "type" : "Method",
        "returns" : [
          " * The Spoon object"
        ],
        "def" : "BrewInfo:showBrewInfoCurSel(subcommand)",
        "parameters" : [
          " * subcommand - brew subcommand to use for the `info` command. Defaults to an empty string, which results in \"brew info\" being run. For example, if `subcommand` is \"cask\", the `brew cask info` command will be used.",
          ""
        ]
      }
    ],
    "Command" : [

    ],
    "Method" : [
      {
        "desc" : "Displays an alert with the output of `brew <subcommand> info <pkg>`",
        "stripped_doc" : [
          "Displays an alert with the output of `brew <subcommand> info <pkg>`",
          ""
        ],
        "name" : "showBrewInfo",
        "doc" : "Displays an alert with the output of `brew <subcommand> info <pkg>`\n\nParameters:\n * pkg - name of the package to query\n * subcommand - brew subcommand to use for the `info` command. Defaults to an empty string, which results in \"brew info <pkg>\" being run. For example, if `subcommand` is \"cask\", the `brew cask info <pkg>` command will be used.\n\nReturns:\n * The Spoon object",
        "notes" : [

        ],
        "signature" : "BrewInfo:showBrewInfo(pkg, subcommand)",
        "type" : "Method",
        "returns" : [
          " * The Spoon object"
        ],
        "def" : "BrewInfo:showBrewInfo(pkg, subcommand)",
        "parameters" : [
          " * pkg - name of the package to query",
          " * subcommand - brew subcommand to use for the `info` command. Defaults to an empty string, which results in \"brew info <pkg>\" being run. For example, if `subcommand` is \"cask\", the `brew cask info <pkg>` command will be used.",
          ""
        ]
      },
      {
        "desc" : "Display `brew <subcommand> info` using the selected text as the package name",
        "stripped_doc" : [
          "Display `brew <subcommand> info` using the selected text as the package name",
          ""
        ],
        "name" : "showBrewInfoCurSel",
        "doc" : "Display `brew <subcommand> info` using the selected text as the package name\n\nParameters:\n * subcommand - brew subcommand to use for the `info` command. Defaults to an empty string, which results in \"brew info\" being run. For example, if `subcommand` is \"cask\", the `brew cask info` command will be used.\n\nReturns:\n * The Spoon object",
        "notes" : [

        ],
        "signature" : "BrewInfo:showBrewInfoCurSel(subcommand)",
        "type" : "Method",
        "returns" : [
          " * The Spoon object"
        ],
        "def" : "BrewInfo:showBrewInfoCurSel(subcommand)",
        "parameters" : [
          " * subcommand - brew subcommand to use for the `info` command. Defaults to an empty string, which results in \"brew info\" being run. For example, if `subcommand` is \"cask\", the `brew cask info` command will be used.",
          ""
        ]
      },
      {
        "desc" : "Opens the homepage for package `pkg`, as obtained from the `homepage` field in `brew <subcommand> cat <pkg>`",
        "stripped_doc" : [
          "Opens the homepage for package `pkg`, as obtained from the `homepage` field in `brew <subcommand> cat <pkg>`",
          ""
        ],
        "name" : "openBrewURL",
        "doc" : "Opens the homepage for package `pkg`, as obtained from the `homepage` field in `brew <subcommand> cat <pkg>`\n\nParameters:\n * pkg - name of the package to query\n * subcommand - brew subcommand to use for the `cat` command. Defaults to an empty string, which results in \"brew cat <pkg>\" being run. For example, if `subcommand` is \"cask\", the `brew cask cat <pkg>` command will be used.\n\nReturns:\n * The Spoon object",
        "notes" : [

        ],
        "signature" : "BrewInfo:openBrewURL(pkg, subcommand)",
        "type" : "Method",
        "returns" : [
          " * The Spoon object"
        ],
        "def" : "BrewInfo:openBrewURL(pkg, subcommand)",
        "parameters" : [
          " * pkg - name of the package to query",
          " * subcommand - brew subcommand to use for the `cat` command. Defaults to an empty string, which results in \"brew cat <pkg>\" being run. For example, if `subcommand` is \"cask\", the `brew cask cat <pkg>` command will be used.",
          ""
        ]
      },
      {
        "desc" : "Opens the homepage for the currently-selected package, as obtained from the `homepage` field in `brew <subcommand> cat <pkg>`",
        "stripped_doc" : [
          "Opens the homepage for the currently-selected package, as obtained from the `homepage` field in `brew <subcommand> cat <pkg>`",
          ""
        ],
        "name" : "openBrewURLCurSel",
        "doc" : "Opens the homepage for the currently-selected package, as obtained from the `homepage` field in `brew <subcommand> cat <pkg>`\n\nParameters:\n * subcommand - brew subcommand to use for the `cat` command. Defaults to an empty string, which results in \"brew cat <pkg>\" being run. For example, if `subcommand` is \"cask\", the `brew cask cat <pkg>` command will be used.\n\nReturns:\n * The Spoon object",
        "notes" : [

        ],
        "signature" : "BrewInfo:openBrewURLCurSel(subcommand)",
        "type" : "Method",
        "returns" : [
          " * The Spoon object"
        ],
        "def" : "BrewInfo:openBrewURLCurSel(subcommand)",
        "parameters" : [
          " * subcommand - brew subcommand to use for the `cat` command. Defaults to an empty string, which results in \"brew cat <pkg>\" being run. For example, if `subcommand` is \"cask\", the `brew cask cat <pkg>` command will be used.",
          ""
        ]
      },
      {
        "desc" : "Binds hotkeys for BrewInfo",
        "stripped_doc" : [
          "Binds hotkeys for BrewInfo",
          ""
        ],
        "name" : "bindHotkeys",
        "doc" : "Binds hotkeys for BrewInfo\n\nParameters:\n * mapping - A table containing hotkey modifier\/key details for the following items:\n  * show_brew_info - Show output of `brew info` using the selected text as package name\n  * open_brew_url - Open the homepage of the formula whose name is currently selected\n  * show_brew_cask_info - Show output of `brew cask info` using the selected text as package name\n  * open_brew_cask_url - Open the homepage of the Cask whose name is currently selected",
        "notes" : [

        ],
        "signature" : "BrewInfo:bindHotkeys(mapping)",
        "type" : "Method",
        "returns" : [

        ],
        "def" : "BrewInfo:bindHotkeys(mapping)",
        "parameters" : [
          " * mapping - A table containing hotkey modifier\/key details for the following items:",
          "  * show_brew_info - Show output of `brew info` using the selected text as package name",
          "  * open_brew_url - Open the homepage of the formula whose name is currently selected",
          "  * show_brew_cask_info - Show output of `brew cask info` using the selected text as package name",
          "  * open_brew_cask_url - Open the homepage of the Cask whose name is currently selected"
        ]
      }
    ],
    "Field" : [

    ],
    "name" : "BrewInfo"
  }
]
